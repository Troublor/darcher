// source: contract_oracle_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.darcher.ContractVulReport', null, global);
goog.exportSymbol('proto.darcher.ContractVulType', null, global);
goog.exportSymbol('proto.darcher.GetReportsByContractControlMsg', null, global);
goog.exportSymbol('proto.darcher.GetReportsByTransactionControlMsg', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.darcher.GetReportsByContractControlMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.darcher.GetReportsByContractControlMsg.repeatedFields_, null);
};
goog.inherits(proto.darcher.GetReportsByContractControlMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.darcher.GetReportsByContractControlMsg.displayName = 'proto.darcher.GetReportsByContractControlMsg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.darcher.GetReportsByTransactionControlMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.darcher.GetReportsByTransactionControlMsg.repeatedFields_, null);
};
goog.inherits(proto.darcher.GetReportsByTransactionControlMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.darcher.GetReportsByTransactionControlMsg.displayName = 'proto.darcher.GetReportsByTransactionControlMsg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.darcher.ContractVulReport = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.darcher.ContractVulReport, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.darcher.ContractVulReport.displayName = 'proto.darcher.ContractVulReport';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.darcher.GetReportsByContractControlMsg.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.darcher.GetReportsByContractControlMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.darcher.GetReportsByContractControlMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.darcher.GetReportsByContractControlMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.darcher.GetReportsByContractControlMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    role: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    address: jspb.Message.getFieldWithDefault(msg, 3, ""),
    reportsList: jspb.Message.toObjectList(msg.getReportsList(),
    proto.darcher.ContractVulReport.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.darcher.GetReportsByContractControlMsg}
 */
proto.darcher.GetReportsByContractControlMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.darcher.GetReportsByContractControlMsg;
  return proto.darcher.GetReportsByContractControlMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.darcher.GetReportsByContractControlMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.darcher.GetReportsByContractControlMsg}
 */
proto.darcher.GetReportsByContractControlMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.darcher.Role} */ (reader.readEnum());
      msg.setRole(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 4:
      var value = new proto.darcher.ContractVulReport;
      reader.readMessage(value,proto.darcher.ContractVulReport.deserializeBinaryFromReader);
      msg.addReports(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.darcher.GetReportsByContractControlMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.darcher.GetReportsByContractControlMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.darcher.GetReportsByContractControlMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.darcher.GetReportsByContractControlMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRole();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getReportsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.darcher.ContractVulReport.serializeBinaryToWriter
    );
  }
};


/**
 * optional Role role = 1;
 * @return {!proto.darcher.Role}
 */
proto.darcher.GetReportsByContractControlMsg.prototype.getRole = function() {
  return /** @type {!proto.darcher.Role} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.darcher.Role} value
 * @return {!proto.darcher.GetReportsByContractControlMsg} returns this
 */
proto.darcher.GetReportsByContractControlMsg.prototype.setRole = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.darcher.GetReportsByContractControlMsg.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.darcher.GetReportsByContractControlMsg} returns this
 */
proto.darcher.GetReportsByContractControlMsg.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string address = 3;
 * @return {string}
 */
proto.darcher.GetReportsByContractControlMsg.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.darcher.GetReportsByContractControlMsg} returns this
 */
proto.darcher.GetReportsByContractControlMsg.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated ContractVulReport reports = 4;
 * @return {!Array<!proto.darcher.ContractVulReport>}
 */
proto.darcher.GetReportsByContractControlMsg.prototype.getReportsList = function() {
  return /** @type{!Array<!proto.darcher.ContractVulReport>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.darcher.ContractVulReport, 4));
};


/**
 * @param {!Array<!proto.darcher.ContractVulReport>} value
 * @return {!proto.darcher.GetReportsByContractControlMsg} returns this
*/
proto.darcher.GetReportsByContractControlMsg.prototype.setReportsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.darcher.ContractVulReport=} opt_value
 * @param {number=} opt_index
 * @return {!proto.darcher.ContractVulReport}
 */
proto.darcher.GetReportsByContractControlMsg.prototype.addReports = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.darcher.ContractVulReport, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.darcher.GetReportsByContractControlMsg} returns this
 */
proto.darcher.GetReportsByContractControlMsg.prototype.clearReportsList = function() {
  return this.setReportsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.darcher.GetReportsByTransactionControlMsg.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.darcher.GetReportsByTransactionControlMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.darcher.GetReportsByTransactionControlMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.darcher.GetReportsByTransactionControlMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.darcher.GetReportsByTransactionControlMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    role: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    hash: jspb.Message.getFieldWithDefault(msg, 3, ""),
    reportsList: jspb.Message.toObjectList(msg.getReportsList(),
    proto.darcher.ContractVulReport.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.darcher.GetReportsByTransactionControlMsg}
 */
proto.darcher.GetReportsByTransactionControlMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.darcher.GetReportsByTransactionControlMsg;
  return proto.darcher.GetReportsByTransactionControlMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.darcher.GetReportsByTransactionControlMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.darcher.GetReportsByTransactionControlMsg}
 */
proto.darcher.GetReportsByTransactionControlMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.darcher.Role} */ (reader.readEnum());
      msg.setRole(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    case 4:
      var value = new proto.darcher.ContractVulReport;
      reader.readMessage(value,proto.darcher.ContractVulReport.deserializeBinaryFromReader);
      msg.addReports(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.darcher.GetReportsByTransactionControlMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.darcher.GetReportsByTransactionControlMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.darcher.GetReportsByTransactionControlMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.darcher.GetReportsByTransactionControlMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRole();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getReportsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.darcher.ContractVulReport.serializeBinaryToWriter
    );
  }
};


/**
 * optional Role role = 1;
 * @return {!proto.darcher.Role}
 */
proto.darcher.GetReportsByTransactionControlMsg.prototype.getRole = function() {
  return /** @type {!proto.darcher.Role} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.darcher.Role} value
 * @return {!proto.darcher.GetReportsByTransactionControlMsg} returns this
 */
proto.darcher.GetReportsByTransactionControlMsg.prototype.setRole = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.darcher.GetReportsByTransactionControlMsg.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.darcher.GetReportsByTransactionControlMsg} returns this
 */
proto.darcher.GetReportsByTransactionControlMsg.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string hash = 3;
 * @return {string}
 */
proto.darcher.GetReportsByTransactionControlMsg.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.darcher.GetReportsByTransactionControlMsg} returns this
 */
proto.darcher.GetReportsByTransactionControlMsg.prototype.setHash = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated ContractVulReport reports = 4;
 * @return {!Array<!proto.darcher.ContractVulReport>}
 */
proto.darcher.GetReportsByTransactionControlMsg.prototype.getReportsList = function() {
  return /** @type{!Array<!proto.darcher.ContractVulReport>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.darcher.ContractVulReport, 4));
};


/**
 * @param {!Array<!proto.darcher.ContractVulReport>} value
 * @return {!proto.darcher.GetReportsByTransactionControlMsg} returns this
*/
proto.darcher.GetReportsByTransactionControlMsg.prototype.setReportsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.darcher.ContractVulReport=} opt_value
 * @param {number=} opt_index
 * @return {!proto.darcher.ContractVulReport}
 */
proto.darcher.GetReportsByTransactionControlMsg.prototype.addReports = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.darcher.ContractVulReport, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.darcher.GetReportsByTransactionControlMsg} returns this
 */
proto.darcher.GetReportsByTransactionControlMsg.prototype.clearReportsList = function() {
  return this.setReportsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.darcher.ContractVulReport.prototype.toObject = function(opt_includeInstance) {
  return proto.darcher.ContractVulReport.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.darcher.ContractVulReport} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.darcher.ContractVulReport.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    funcSig: jspb.Message.getFieldWithDefault(msg, 2, ""),
    opcode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pc: jspb.Message.getFieldWithDefault(msg, 4, 0),
    txHash: jspb.Message.getFieldWithDefault(msg, 5, ""),
    type: jspb.Message.getFieldWithDefault(msg, 6, 0),
    description: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.darcher.ContractVulReport}
 */
proto.darcher.ContractVulReport.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.darcher.ContractVulReport;
  return proto.darcher.ContractVulReport.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.darcher.ContractVulReport} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.darcher.ContractVulReport}
 */
proto.darcher.ContractVulReport.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFuncSig(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOpcode(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPc(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxHash(value);
      break;
    case 6:
      var value = /** @type {!proto.darcher.ContractVulType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.darcher.ContractVulReport.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.darcher.ContractVulReport.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.darcher.ContractVulReport} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.darcher.ContractVulReport.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFuncSig();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOpcode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPc();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getTxHash();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.darcher.ContractVulReport.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.darcher.ContractVulReport} returns this
 */
proto.darcher.ContractVulReport.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string func_sig = 2;
 * @return {string}
 */
proto.darcher.ContractVulReport.prototype.getFuncSig = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.darcher.ContractVulReport} returns this
 */
proto.darcher.ContractVulReport.prototype.setFuncSig = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string opcode = 3;
 * @return {string}
 */
proto.darcher.ContractVulReport.prototype.getOpcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.darcher.ContractVulReport} returns this
 */
proto.darcher.ContractVulReport.prototype.setOpcode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint64 pc = 4;
 * @return {number}
 */
proto.darcher.ContractVulReport.prototype.getPc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.darcher.ContractVulReport} returns this
 */
proto.darcher.ContractVulReport.prototype.setPc = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string tx_hash = 5;
 * @return {string}
 */
proto.darcher.ContractVulReport.prototype.getTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.darcher.ContractVulReport} returns this
 */
proto.darcher.ContractVulReport.prototype.setTxHash = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional ContractVulType type = 6;
 * @return {!proto.darcher.ContractVulType}
 */
proto.darcher.ContractVulReport.prototype.getType = function() {
  return /** @type {!proto.darcher.ContractVulType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.darcher.ContractVulType} value
 * @return {!proto.darcher.ContractVulReport} returns this
 */
proto.darcher.ContractVulReport.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional string description = 7;
 * @return {string}
 */
proto.darcher.ContractVulReport.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.darcher.ContractVulReport} returns this
 */
proto.darcher.ContractVulReport.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * @enum {number}
 */
proto.darcher.ContractVulType = {
  NIL: 0,
  EXCEPTION_DISORDER: 1,
  REENTRANCY: 2,
  TIMESTAMP_DEPENDENCY: 3,
  BLOCKNUMBER_DEPENDENCY: 4,
  DANGEROUS_DELEGATECALL: 5,
  GASLESS_SEND: 6
};

goog.object.extend(exports, proto.darcher);
